/*
 * This file was generated by the Gradle 'init' task.
 *
 * This project uses @Incubating APIs which are subject to change.
 */

plugins {
    `java-library`
    `maven-publish`
    id("com.gradleup.shadow") version "9.0.0-beta15"
    id("com.gorylenko.gradle-git-properties") version "2.4.1"
}

repositories {
    mavenLocal()
    maven {
        url = uri("https://repo.opencollab.dev/maven-releases/")
    }

    maven {
        url = uri("https://repo.opencollab.dev/maven-snapshots/")
    }

    maven {
        url = uri("https://repo.waterdog.dev/main")
    }

    maven {
        url = uri("https://repo.maven.apache.org/maven2/")
    }
}

dependencies {
    api(libs.com.bugsnag.bugsnag)
    api(libs.org.bstats.bstats.base)
    api(libs.net.cubespace.yamler.core)
    api(libs.org.yaml.snakeyaml)
    api(libs.com.google.code.gson.gson)
    api(libs.it.unimi.dsi.fastutil)
    api(libs.org.apache.commons.commons.lang3)
    api(libs.org.apache.logging.log4j.log4j.api)
    api(libs.org.apache.logging.log4j.log4j.core)
    api(libs.com.lmax.disruptor)
    api(libs.jline.jline)
    api(libs.org.jline.jline.terminal)
    api(libs.org.jline.jline.terminal.jna)
    api(libs.org.jline.jline.reader)
    api(libs.net.minecrell.terminalconsoleappender)
    api(libs.org.cloudburstmc.protocol.bedrock.codec)
    api(libs.org.cloudburstmc.protocol.bedrock.connection)
    api(libs.org.cloudburstmc.netty.netty.transport.raknet)
    api(libs.io.netty.netty.transport.native.epoll)
    api(libs.io.netty.netty.transport.native.kqueue)
    api(libs.com.nimbusds.nimbus.jose.jwt)
    compileOnly(libs.org.projectlombok.lombok)
    annotationProcessor(libs.org.projectlombok.lombok)
}

group = "xyz.syodo.software"
version = "2.0.4"
description = "syodogpe"
java.sourceCompatibility = JavaVersion.VERSION_17

publishing {
    publications.create<MavenPublication>("maven") {
        from(components["java"])
    }
}

tasks.shadowJar {
    archiveBaseName.set("waterdogpe")
    relocate("org.bstats", "dev.waterdog")
    manifest {
        attributes["Main-Class"] = "dev.waterdog.waterdogpe.WaterdogPE"
    }
}

tasks.withType<JavaCompile>() {
    options.encoding = "UTF-8"
}

tasks.withType<Javadoc>() {
    options.encoding = "UTF-8"
    options.quiet()
}
